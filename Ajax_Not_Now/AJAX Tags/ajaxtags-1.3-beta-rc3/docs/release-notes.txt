----------------------------------------
AJAX JSP TAG LIBRARY RELEASE NOTES
----------------------------------------

1. Overview
2. Requirements
3. Basic Usage
4. History of Changes
5. Licensing


----------------------------------------
1 OVERVIEW
----------------------------------------

The AJAX Tag Library is a set of JSP tags that simplify the use of Asynchronous
JavaScript and XML (AJAX) technology in JavaServer Pages. This tag library
eases development by not forcing J2EE developers to write the necessary
JavaScript to implement an AJAX-capable web form.

The implementation is a combination of Java classes and JavaScript source
files. The Java code should be OS independent as there are no client side
components. However, the Java is dependent on JDK 1.4+ and requires a Servlet
container to run. The JavaScript should run in at least Firefox 1.0+ and
Internet Explorer 5.0+.

A demo application is also available that shows how each JSP tag can be used
in the context of simple use cases such as email address lookup, chained
select field population, and live form updates.  It should be easy to see how
these examples could be expanded to a variety of other real-world uses.  In
addition, the examples demonstrate simple ways to manage the server-side
callers (i.e, recipients of AJAX calls) in an abstract, reusable way.  Note
that the demo application is built to run under Servlet 2.4/JSP 2.0 containers
and has a convenient Ant script to make deploying to Tomcat 5.0+ easy.

FEATURES AND AVAILABLE JSP TAGS
- Autocomplete: Retrieves a list of values that matches the string entered in
  a text form field as the user types.

- Callout: Displays a callout or popup balloon, anchored to an HTML element
  with an onclick event.

- HTML Content Replace: Builds the JavaScript required to hook a content area
  (e.g., DIV tag) to a link, image, or other HTML element's onclick event.

- Portlet: Portlet-style capability from a AJAX-enabled JSP tag.

- Select: Based on a selection within a dropdown field, a second select field
  will be populated.

- Tab Panel: Enable an AJAX-based set of property pages.

- Toggle: Uses images to create either a single on/off toggle or a sequential
  rating system.

- Update Field: Updates one or more form field values based on response to
  text entered in another field.

- Area and Anchor: Shows how to AJAX-enable any area of your page

- Ajax DisplayTag: Shows how to AJAX-enable DisplayTag

For more information, please visit:
Project Page:   http://ajaxtags.sourceforge.net/
Downloads:      http://www.sourceforge.net/projects/ajaxtags/
Demo/Examples:  http://ajaxtags.no-ip.info/

We very much welcome feedback from the community.  Our goal is to simplify
development and support the Java community in any way we can.  Thank you.

Darren Spurgeon
and the rest of the AJAX Tag Library team


----------------------------------------
2 REQUIREMENTS
----------------------------------------

To use the tag library, you'll need the following:
  * JDK 1.5+
  * Servlet container running Servlets 2.3+ and JSP 1.0+ (Note: sample application requires
    Servlet 2.4 and JSP 2.0)
  * Prototype framework 1.5.0: http://prototype.conio.net/
  * Scriptaculous library 1.7.0: http://script.aculo.us/
  * OverLIBMWS library: http://www.macridesweb.com/oltest/

If you intend to build from the source, you'll need the following:
  * Maven 2
  * All source dependencies


----------------------------------------
3 BASIC USAGE
----------------------------------------

BASIC REQUIREMENTS (found in distribution)
  /ajaxtags-{version}.jar   		==> core JSP tag library
  /js/ajax/ajaxtags.js				==> core JavaScript
  /js/prototype.js    				==> Prototype framework JavaScript
  /js/scriptaculous.js      		==> Scriptaculous library JavaScript
      builder.js               		...
      controls.js             		...
      dragdrop.js               	...
      effects.js                	...
      slider.js                 	...
  /js/overlibmws/*.(js|gif|html)   	==> OverLIBMWS library JavaScript
  /css/ajaxtags.css			  		==> modify to suit
  /img/*.(png|gif)       			==> sample images for portlet toolbar


SET UP ENVIRONMENT
1. Copy the ajaxtags.jar into your WEB-INF/lib directory.
2. Add taglib definition to your application's web.xml file. Not required for JSP 2.0 users.

  <taglib>
    <uri>http://ajaxtags.org/tags/ajax</uri>
    <location>/WEB-INF/ajaxtags.tld</location>
  </taglib>


CREATE SERVER-SIDE HANDLER
You must create a servlet of other server-side object to return a result to the client (i.e.,
calling AJAX function).  As of AjaxTags 1.2, you may return a response in plain text, HTML, or XML
as long as you've defined an appropriate, corresponding response parser on the client side (i.e.,
JavaScript).  We provide default implementations, however, for plain text, HTML, XML and other
variations.  Thus, the strict XML format of prior AjaxTags releases is not necessary.

  >> XML Response (ResponseXmlParser)

  The following is the default XML formatted response accepted by AjaxTags, the same format since
  the 1.1 release.  There is a helper class to assist in building the XML if you don't want to do it
  by hand...see the {{{advanced.html}Advanced Usage section}} for more information.  However, as
  mentioned above, you're free to implement your own XML parser (via JavaScript) as you see fit.

    <?xml version="1.0" encoding="UTF-8"?>
    <ajax-response>
      <response>
        <item>
          <name>Record 1</name>
          <value>1</value>
        </item>
        <item>
          <name>Record 2</name>
          <value>2</value>
        </item>
        <item>
          <name>Record 3</name>
          <value>3</value>
        </item>
      </response>
    </ajax-response>

  >> Text Response (ResponseTextParser)

  This is simply a comma-delimited response.

    Record 1,1
    Record 2,2
    Record 3,3


PREPARE JSP VIEW
Your JSP, of course, is where it all comes together. You must (1) declare the taglib, (2) include a
reference to the JavaScript source, (3) include a reference to any CSS required (of which at least
two tags currently do), (4) add your content (often times a web form), and lastly (5) include the
AJAX tag you want to use.

  <%@ taglib uri="http://ajaxtags.org/tags/ajax" prefix="ajax" %>
  <html>
  <head>
    <title>AJAX JSP Tag Library</title>
    <script type="text/javascript" src="prototype-1.4.0.js"></script>
    <script type="text/javascript" src="scriptaculous.js"></script>
    <script type="text/javascript" src="overlibmws.js"></script>
    <script type="text/javascript" src="ajaxtags-1.2.js"></script>
    <link type="text/css" rel="stylesheet" href="ajax.css" />
  </head>
  <body>

  <form>
    Make:
    <select id="make" name="make">
      <option value="">Select make</option>
      <c:forEach items="${makes}" var="make">
        <option value="${make}">${make}</option>
      </c:forEach>
    </select>

    Model:
    <select id="model" name="model">
      <option value="">Select model</option>
    </select>
  </form>

  <ajax:select
    baseUrl="${pageContext.request.contextPath}/GetCarModel.view"
    source="make"
    target="model"
    parameters="make={make}" />

  </body>
  </html>


----------------------------------------
4 HISTORY OF CHANGES
----------------------------------------
1.3-beta (06-JUN-2007)

* Added post ...
* Fixed problem with IE (autocomplete)

1.2-Beta 2 (15-APR-2006)
------------------------------
* Added postFunction to displayTag; SF patch #1373772
* Fixed problem with scripts being stripped; SF bug #1422517
* Fixed problem with not handling multiple parameters; SF bug #1422445
* Fixed problem with autocomplete not replacing parameter values; SF bug #1425496
* Fixed missing evalScripts option; SF bug #1427360
* Autocomplete not adding parameters to URL; SF bug #1441982
* Autocomplete missing postFunction; SF bug #1427202; SF bug #1427326
* Added variable property to tags; SF feature #1450627
* Updated Scriptaculous to 1.5.3
* Fixed parameter builder not recognizing periods in field names; SF bug #1442637
* Fixed parameters not being escaped when building URL; SF bug #1451366
* Now using encodeURIComponent instead of escape for querystring parameter values; SF bug #1453186
* Added attachTo attribute to allow variable to be assigned as member of an existing object; SF bug #1454872
* Allowing for multiple ajax:selects per source; SF patch #1375403
* Fixed link to Maven 2 dependency on jericho-html; SF patch #1433232
* Parameter parsing now handling indexed property field names; SF bug #1388068, #1410789, #1432452
* Fixed "JS runtime error: Not Implemented" error in IE; SF bug #1351843
* Added executeOnLoad event to select tag; SF patch #1375673
* Added defaultOptions attribute to select tag; SF patch #1375718
* Changed toggle 'parameters' attribute to use 'rating={ajaxParameter}' as default; SF patch #1436887
* Added attributes to tabPanel so CSS can be assigned to tabs; SF feature #1409894


1.2-Beta 1 (01-Feb-2006)
------------------------------
* Ability to define custom response parsers
* Moved build process to Maven 2
* ajax:autocomplete now built on top of Scriptaculous
* ajax:callout now built on top of OverLIB
* usage.html contains misleading example; SF bug 1403929
* JavaScript error in Firefox 1.5; SF bug 1396003
* Callout does not close if clicked outside; SF bug 1388175
* Provide a way not to show the close button in callout; SF bug 1388108
* Callout positioning is incorrect; SF bug 1388102
* Callout was not closed properly; SF bug 1388098
* Right margin is too big; SF bug 1388089
* Autocomplete suggest list not removed on reedit; SF bug 1343892
* Tab key not closing autocomplete suggestion list; SF bug 1343032
* Maven build process fails; SF bug 1331215


1.1.5 (14-Nov-2005)
------------------------------
* Parameters not encoded before sending to Prototype; SF bug #1347143
* Event type documented incorrectly as an attribute of the autocomplete tag; SF bug #1343031
* Cannot change callout tag width; SF bug #1347174
* Struts Validator breaking with AjaxTags/Prototype; SF bug #1348332 (WON'T FIX; document only)
* Documentation missing for area, anchors, and displayTag; SF bug #1348582
* Autocomplete hiding cursor on input fields; SF bug #1353389
* Set default charset in base action and servlet to UTF-8
* Make encoding on ajax xml builder an accessible property; SF bug #1353444
* Add baseUrl, tableClass, columnClass property to displayTag; thanks to Ben J Christensen
* Select not handling case empty values; SF bug #1356186; thanks to Huw B. Richards
* Added FAQ about setting cache control on servlet and JSP; IE tends to cache liberally


1.1 (17-Oct-2005)
------------------------------
* Added ajax:anchor tag
* Added ajax:area tag
* Added ajax:displayTag tag
* Added documentation on AjaxXmlBuilder helper class
* Fixed problem with JavaScript not honoring eventType property; SF bug #1326150
* Fixed update field tag to handle updates to textarea fields; SF bug #1326120
* Removed unused required field contentXmlName from ajax:htmlContent tag
* Fixed documentation error for autocomplete example
* [WON'T FIX] XML Response should not contain &; SF bug #1313764
* [WON'T FIX] IE cache busting problem in Prototype; SF bug #1306205
* [WON'T FIX] Javascript failing in Firefox; SF bug #1325273


1.1-Beta 1 (21-Sep-2005)
------------------------------
* Added ajax:htmlContent tag
* Added ajax:tabPanel tag
* Added ajax:portlet tag
* Added FAQ page to docs
* Added notes on issue with CSS positioning
* Added links and resources page
* Added screenshots of example UI
* Added ability to specify which events to attach to elements
* Automatically disable autocomplete attribute on input fields; SF feature #1262677
* Added ability for each tag to send multiple parameters on request
* Added AjaxXmlBuilder class to make XML output easier
* Width of autocomplete dropdown expandable to size of content
* Option to prevent user from entering additional characters if matches are exhausted
* Added IFRAME to autocomplete to handle IE problem with form fields showing through layers;
  SF bug #1258314
* Fixed problem with call to setProgressStyle out of order with AJAX call; SF bug #1260883


1.0.1 (12-Aug-2005)
------------------------------
* Added release notes
* Removed taglib generation in Maven; conflict in xmlns for TLD validation
* Fixed initial positioning of callout
* Fixed problem with post-function not firing on autocomplete; SF feature #1256399
* Fixed problem with autocomplete firing when tab key pressed on blank field; SF bug #1255730
* Fixed autocomplete not clearing image on empty result; SF bug #1256096
* Fixed invalid XML in ajaxtags.tld; SF bug #1256624


1.0 (05-Aug-2005)
------------------------------
* Fixed some variable initializations to conform to strict JavaScript validation


1.0-Beta 3 (01-Aug-2005)
------------------------------
* Added ajax:callout tag
* Now compiled against JDK 1.4 target
* Revised the documentation to clarify required/nonrequired tag attributes


1.0-Beta 2 (16-Jul-2005)
------------------------------
* Added ajax:toggle tag
* Added ajax:updateField tag


1.0-Beta 1 (12-Jun-2005)
------------------------------
* Added ajax:autocomplete tag
* Added ajax:select tag


----------------------------------------
5 LICENSING
----------------------------------------

AJAXTAGS

The AJAX JSP Tag Library ("AjaxTags") is licensed under the Apache License,
Version 2.0 (the "License").  Please see the LICENSE.TXT file included with
this distribution or obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


PROTOTYPE

The Prototype JavaScript framework is included with this distribution,
is covered under its own separate license, and is copyright as follows:

Prototype JavaScript framework, version 1.4.0
(c) 2005 Sam Stephenson <sam@conio.net>

Prototype is freely distributable under the terms of an MIT-style license.

For details, see the Prototype web site: http://prototype.conio.net/.


SCRIPTACULOUS

The Scriptaculous JavaScript library is included with this distribution,
is covered under its own separate license, and is copyright as follows:

(c) 2005 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
